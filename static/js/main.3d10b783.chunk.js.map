{"version":3,"sources":["components/header.js","components/sign.js","components/studentscorner.js","components/login.js","components/land.js","components/mycomplaints.js","components/food.js","components/admin.js","components/adminfood.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","handlelogout","history","push","state","isopen","togglenav","bind","this","setState","className","Navbar","color","light","NavbarBrand","style","href","ButtonDropdown","isOpen","toggle","Button","id","DropdownToggle","caret","DropdownMenu","DropdownItem","to","onClick","Component","withRouter","Sign","handlesignin","msg","values","username","email","password","confirmpassword","onSubmit","text","model","placeholder","Scorner","br","borderRadius","border","width","height","padding","alt","src","Login","name","Land","bstyle","fontSize","Mycomplaints","cardStyle","margin","backgroundColor","fontFamily","in","ListGroup","map","complaint","key","_id","Card","CardBody","CardHeader","foodplace","CardText","description","resolved","CardFooter","date","toString","Food","handlefood","formdata","FormData","append","image","encType","Row","Label","htmlFor","Col","md","select","textarea","rows","cols","file","button","Admin","Foodadmin","variant","Main","path","component","exact","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3d10b783.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Navbar,NavbarBrand,Button,ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem} from 'reactstrap';\r\nimport { withRouter,Link} from 'react-router-dom'\r\n//import { connect } from 'react-redux';\r\n//import {logout} from '../redux/actions/actioncreators'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated:state.auth.isAuthenticated,\r\n    user:state.auth.user\r\n})\r\n\r\n class Header extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n           isopen:false\r\n        };\r\n        this.togglenav=this.togglenav.bind(this);\r\n        this.handlelogout=this.handlelogout.bind(this);\r\n    }\r\n\r\n    togglenav(){\r\n        this.setState({\r\n            isopen:!this.state.isopen\r\n        })\r\n    }\r\n    \r\n    handlelogout=()=>{\r\n      //this.props.logout();\r\n      this.props.history.push('/land')\r\n    }\r\n    render() {\r\n        let sgss={color:\"white\"}\r\n        return (\r\n            <div className=\"head\">\r\n            <Navbar color=\"black\" light>\r\n              <NavbarBrand style={sgss}href=\"/\" className=\"mr-auto homenav\">SAPP</NavbarBrand>\r\n              {/*this.props.isAuthenticated*/ true ?\r\n              /*this.props.user.role==\"Foodadmin\"*/ false?(\r\n                <ButtonDropdown isOpen={this.state.isopen} toggle={this.togglenav}>\r\n                <Button id=\"caret\" color=\"primary\">{this.props.user.username.toUpperCase()}</Button>\r\n                <DropdownToggle caret color=\"primary\" />\r\n                <DropdownMenu>\r\n                  <DropdownItem onClick={this.handlelogout}>Logout</DropdownItem>\r\n                </DropdownMenu>\r\n              </ButtonDropdown>\r\n              ):(\r\n                <ButtonDropdown isOpen={this.state.isopen} toggle={this.togglenav}>\r\n                  <Button id=\"caret\" color=\"primary\">{/*{this.props.user.username.toUpperCase()}*/}User1</Button>\r\n                  <DropdownToggle caret color=\"primary\" />\r\n                  <DropdownMenu>\r\n                  <DropdownItem ><Link to='/studentscorner/mycomplaints'>mycomplaints</Link></DropdownItem>\r\n                    <DropdownItem onClick={this.handlelogout}>Logout</DropdownItem>\r\n                  </DropdownMenu>\r\n                </ButtonDropdown>\r\n              ):\r\n              (<Button color='Info' outline ><Link to='/login'>LOGIN</Link></Button>)\r\n              }\r\n            </Navbar>\r\n          </div>\r\n          \r\n        );\r\n      \r\n        \r\n    }\r\n}\r\n\r\nexport default withRouter(/*connect(mapStateToProps,{logout})*/Header);","import React, { Component } from 'react'\r\nimport {Control,LocalForm} from 'react-redux-form'\r\n//import { connect } from 'react-redux';\r\n//import {signup} from '../redux/actions/actioncreators'\r\nimport {Alert} from 'reactstrap'\r\n\r\n/*const mapStateToProps = (state) => ({\r\n    isAuthenticated:state.auth.isAuthenticated,\r\n    error:state.errors\r\n})*/\r\nclass Sign extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handlesignin=this.handlesignin.bind(this)\r\n        this.state={\r\n          msg:null\r\n        }\r\n    }\r\n    handlesignin(values){\r\n      let {username,email,password,confirmpassword} = values;\r\n     // this.props.signup({username,email,password,confirmpassword}) \r\n    }\r\n    /*componentDidUpdate(prevProps){\r\n      let {error,isAuthenticated} = this.props\r\n      if(isAuthenticated){\r\n        return this.props.history.push('/land')\r\n     }\r\n      if(error!=prevProps.error){\r\n        if(error.id===\"SIGN_UP_FAIL\"){\r\n        this.setState({msg:error.msg.msg})\r\n        }else{\r\n          this.setState({msg:null})\r\n        }\r\n      }\r\n    }*/\r\n    render() {\r\n        return (\r\n                <div id='sign'>\r\n                    <h4 className=\"sign-title\">Sign In</h4>\r\n                    \r\n                    <LocalForm className='container-fluid' onSubmit={(values) => this.handlesignin(values)} >\r\n                    <span className='alertmessage'>{this.state.msg ? (<span>{this.state.msg}</span>):null}</span>\r\n                      <div className = 'form-group row'>\r\n                        <Control.text id='username' model='.username' placeholder='Username'/>\r\n                      </div>\r\n                      <div className = 'form-group row'>                        \r\n                        <Control.text id='email' model='.email' placeholder=\"Email\"/>\r\n                      </div>\r\n                      <div className = 'form-group row'>\r\n                        <Control.password id='password' model='.password' placeholder=\"Passsword\"  />\r\n                      </div>\r\n                      <div className = 'form-group row'>\r\n                        <Control.password id='confirmpassword' model='.confirmpassword' placeholder=\"confirm-password\" />\r\n                      </div>\r\n                      <button className='sign-but' >Sign In</button>\r\n                   </LocalForm> \r\n                </div>\r\n        )\r\n    }\r\n}\r\nexport default  /*connect(mapStateToProps,{signup})*/(Sign)","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Scorner extends Component {\r\n    \r\n    render() {\r\n      let br={borderRadius:\"50px\" ,border:\"solid rgb(34, 85, 151)\",width:\"200px\",height:\"200px\",padding:\"15px\"}\r\n     \r\n        return (\r\n            <div className='sc'>\r\n                <div className='row r1'>\r\n                  <Link > \r\n                  <img className=\"academics cd \"style={br} alt=\" \" src=\"/assets/icons/academics.png\" /> \r\n                  </Link>\r\n                \r\n                  <Link >\r\n                    <img className=\"hostel cd \" style={br} alt=\" \" src=\"/assets/icons/hostel.png\" />    \r\n                  </Link>\r\n             \r\n                  <Link >\r\n                    <img className=\"transport cd \" style={br} alt=\" \" src=\"/assets/icons/transport.png\" />                  \r\n                  </Link>\r\n              </div>  \r\n              <div className='row r2 '>\r\n                  <Link >\r\n                    <img className=\"maintenance cd \" style={br} alt=\" \" src=\"/assets/icons/maintenance.png\"  />              \r\n                  </Link>\r\n            \r\n                  <Link to=\"/studentscorner/food\">\r\n                    <img  className=\"food cd \" style={br} alt=\" \" src=\"/assets/icons/food.png\"  />              \r\n                  </Link>\r\n               \r\n                  <Link>\r\n                    <img  className=\"sports cd \"style={br} alt=\" \" src=\"/assets/icons/sports.png\"  />              \r\n                  </Link>\r\n              </div> \r\n          </div>\r\n        )\r\n    }\r\n}\r\n","import React,{Component} from 'react';\r\nimport {Control,LocalForm} from 'react-redux-form';\r\nimport {Link,withRouter} from 'react-router-dom';\r\n//import {login} from '../redux/actions/actioncreators'\r\n//import { connect } from 'react-redux';\r\nimport {Alert} from 'reactstrap';\r\n\r\n/*const mapStateToProps = (state) => ({\r\n  isAuthenticated:state.auth.isAuthenticated,\r\n  error:state.errors\r\n})*/\r\n\r\nclass Login extends Component  {\r\n     constructor(props){\r\n       super(props);\r\n      // this.handlelogin=this.handlelogin.bind(this);\r\n       this.state={msg:null}\r\n     }\r\n    /*componentDidUpdate(prevProps){\r\n      let {error,isAuthenticated} = this.props;\r\n      if(isAuthenticated){\r\n         return this.props.history.push('/land')\r\n      }\r\n    }\r\n    handlelogin (values){\r\n          let{email,password}=values\r\n          this.props.login({email,password});        \r\n    }*/\r\n    render(){\r\n        return (\r\n                <div className='login'>\r\n                  <div className=\"log\">\r\n                    <h4 className=\"login-title col-md-auto\">Login</h4>\r\n                    <LocalForm className=\"form\" /*onSubmit={(values) => this.handlelogin(values)}*/>\r\n                      <Control.text model=\".email\" id=\"email\" name=\"email\"placeholder=\"email\"/><br/>\r\n                      <Control.password model=\".password\" id=\"password\" name=\"password\"placeholder=\"password\"/><br/>\r\n                      <button className='login-but log-but f6 f7-ns db'>Login</button>    \r\n                    </LocalForm>\r\n                    <Link to='/signup' className='account'>Create an Account</Link>\r\n                  </div>\r\n                </div>\r\n      )}\r\n    }\r\nexport default withRouter(/*connect(mapStateToProps,{login})*/(Login))","import React, {Component} from 'react'\r\nimport {Button} from 'reactstrap'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Land extends Component {\r\n   /* constructor(props){\r\n        super(props);\r\n    }*/\r\n\r\n    render() {\r\n        let bstyle = {\r\n            color:\"black\",\r\n            fontSize:\"20px\"\r\n            \r\n        }\r\n        let colr = {\r\n            backgroundColor:\"black\"\r\n        }\r\n        return (\r\n            <div className=\"land \">\r\n                <p>\r\n                    The most cherished gift is a life based on education.<br/>\r\n                    A little Knowledge removes a lot of Ignorance\r\n                </p>\r\n                <div className=\"row justify-content-end align-items-end colr\">\r\n                    <div className=\"col-5\">\r\n                            <Button color='secondary'><Link style={bstyle} className=\"studentnav\" to='/studentscorner'>Studentscorner</Link></Button>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                            <Button color='secondary'><Link style={bstyle} className=\"studentnav\" to='/admin'>Faculty</Link><br/></Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n  ","import React, { Component } from 'react';\r\nimport {Card,CardBody,CardHeader,CardText,Button,ListGroup,CardFooter} from 'reactstrap';\r\n//import {connect} from 'react-redux';\r\nimport {  Fade, Stagger } from 'react-animation-components';\r\n//import {store} from '../redux/configurestore';\r\n//import {Getfood} from '../redux/actions/foodaction';\r\n/*const mapStateToProps = (state) => ({\r\n    user:state.auth.user,\r\n    Complaints:state.food.complaints\r\n})*/\r\nclass Mycomplaints  extends Component {\r\n    \r\n   /* componentDidMount(){\r\n        store.dispatch(Getfood());\r\n       }*/\r\n    render() { \r\n        //let complaints = this.props.Complaints;\r\n        //let Email = this.props.user.email;\r\n        let complaints = [\r\n            {\r\n                \"_id\":1234,\r\n                \"email\":\"abc@gmail.com\",\r\n                \"foodplace\":\"Canteen\",\r\n                \"description\":\"Looks expired ingredients\",\r\n                \"date\":\"23/12/2020\"\r\n            }\r\n        ]\r\n        let cardStyle = {\r\n            margin:'5px',\r\n            border:\"solid 2px\",\r\n            backgroundColor:\"rgb(108, 147, 219)\",\r\n            fontFamily: 'Varela Round'\r\n        }\r\n        return ( \r\n        <div>\r\n             <Stagger in>\r\n                    <ListGroup>\r\n                        {\r\n                            complaints.map((complaint)=>{\r\n                                \r\n                                return (\r\n                                    <Fade in key={complaint._id}>\r\n                                       \r\n                                        <Card style={cardStyle} className=\"text-center\">\r\n                                            \r\n                                            <CardBody>\r\n                                            <CardHeader>{complaint.foodplace}</CardHeader>\r\n                                                <CardText>\r\n                                                {complaint.description}\r\n                                                </CardText>\r\n                                                <CardText>{ complaint.resolved ? \"your complaint has been resolved\" : `your complaint has'nt been resolved` }</CardText>\r\n                                                \r\n                                            </CardBody>\r\n                                            <CardFooter className=\"text-muted\">{complaint.date.toString()}</CardFooter>\r\n                                        </Card>\r\n                                       \r\n                                    </Fade>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ListGroup>\r\n                </Stagger>\r\n        </div> \r\n        );\r\n    }\r\n}\r\n \r\nexport default /*connect(mapStateToProps,null)*/(Mycomplaints);","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\n//import {Addfood} from \"../redux/actions/foodaction\"\r\nimport {Control,LocalForm} from 'react-redux-form';\r\nimport {Label,Row,Col} from 'reactstrap';\r\n\r\n\r\nlet mapStatetoProps = (state) => ({\r\n   email : state.auth.user.email\r\n})\r\nclass Food extends Component {\r\n  constructor(props){\r\n      super(props);\r\n      this.handlefood=this.handlefood.bind(this);\r\n  }\r\n\r\n  handlefood(values){\r\n   let formdata = new FormData();\r\n    formdata.append('email',this.props.email);\r\n    formdata.append('foodplace',values.foodplace);\r\n    formdata.append('description',values.description);\r\n    formdata.append('image',values.image[0]);\r\n    //this.props.Addfood(formdata);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n              <div className=\"food\">\r\n                  <div className=\"foodcontent\">\r\n                  <h4 className=\"food-title col-md-auto\">Food grievance</h4>\r\n                  <LocalForm className=\"fform\" onSubmit={(values) => this.handlefood(values)} encType=\"multipart/form-data\" id=\"Foodform\">\r\n                      <Row className=\"form-group fp\">\r\n                        <Label htmlFor=\"foodplace\">Food-Place :</Label>\r\n                        <Col md={5}>\r\n                            <Control.select model=\".foodplace\" id=\"foodplace\" className=\"form-control\">\r\n                                <option>Kore</option>\r\n                                <option>East Kore</option>\r\n                                <option>Vallalar Maiyyam</option>\r\n                                <option>Saradha Maiyyam</option>\r\n                                <option>K's Cafe(Boys-Hotel)</option>\r\n                                <option>K's Cafe(Girls-Hotel)</option>\r\n                                <option>Munch-Box</option>\r\n                                <option>CCD</option>\r\n                                <option>Nescafe</option>\r\n                            </Control.select>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row  className=\"form-group fd\">\r\n                        <Label htmlFor=\"description\">Description    :</Label>\r\n                        <Col md={5} >\r\n                          <Control.textarea rows={8} cols={8} model=\".description\" id=\"description\" name=\"description\" className=\"form-control\" /><br/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"form-group\" id=\"fim\">\r\n                        <Label htmlFor=\"Image\">Image :</Label>\r\n                        <Col md={5} >\r\n                          <Control.file  model=\".image\" id=\"image\" name=\"complaint_image\" className=\"form-control-file\" /><br/>\r\n                        </Col>\r\n                    </Row>\r\n                        <Control.button className=\"btn btn-info mb-4 fbut\" model=\"user\" > Submit</Control.button>\r\n                  </LocalForm>\r\n              </div>\r\n              </div>\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default /*connect(mapStatetoProps,{Addfood})*/(Food)","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Admin extends Component {\r\n    \r\n    render() {\r\n      let br={borderRadius:\"50px\" ,border:\"solid rgb(34, 85, 151)\",width:\"200px\",height:\"200px\",padding:\"15px\"}\r\n     \r\n        return (\r\n            <div className='ad'>\r\n                <div className='row a1'>\r\n                  <Link > \r\n                  <img className=\"academics cd \"style={br} alt=\" \" src=\"/assets/icons/academics.png\" /> \r\n                  </Link>\r\n                \r\n                  <Link >\r\n                    <img className=\"hostel cd \" style={br} alt=\" \" src=\"/assets/icons/hostel.png\" />    \r\n                  </Link>\r\n             \r\n                  <Link >\r\n                    <img className=\"transport cd \" style={br} alt=\" \" src=\"/assets/icons/transport.png\" />                  \r\n                  </Link>\r\n              </div>  \r\n              <div className='row a2 '>\r\n                  <Link >\r\n                    <img className=\"maintenance cd \" style={br} alt=\" \" src=\"/assets/icons/maintenance.png\"  />              \r\n                  </Link>\r\n            \r\n                  <Link to=\"/admin/food\">\r\n                    <img  className=\"food cd \" style={br} alt=\" \" src=\"/assets/icons/food.png\"  />              \r\n                  </Link>\r\n               \r\n                  <Link>\r\n                    <img  className=\"sports cd \"style={br} alt=\" \" src=\"/assets/icons/sports.png\"  />              \r\n                  </Link>\r\n              </div> \r\n          </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Card,CardBody,CardText,Button,CardImg,Container,ListGroup,ListGroupItem, CardHeader,CardFooter} from 'reactstrap';\r\nimport {connect} from 'react-redux';\r\nimport {Fade,Stagger} from 'react-animation-components';\r\n/*import {Resolvefood} from '../redux/actions/foodaction';\r\nimport {store} from '../redux/configurestore';\r\nimport {Getfood} from '../redux/actions/foodaction';\r\n\r\nconst mapStateProps = (state) => ({\r\n    Complaints:state.food.complaints,\r\n})*/\r\nclass Foodadmin  extends Component {\r\n    \r\n   /* componentDidMount(){\r\n        store.dispatch(Getfood());\r\n       }*/\r\n       \r\n    constructor(props){\r\n        super(props);\r\n       // this.handleResolve=this.handleResolve.bind(this);\r\n    }\r\n\r\n  /*  handleResolve(_id){\r\n        console.log(\"from client\",_id);\r\n         this.props.Resolvefood(_id);\r\n    }*/\r\n\r\n    render() { \r\n       let complaints = [\r\n           {\r\n               \"_id\":1234,\r\n               \"email\":\"abc@gmail.com\",\r\n               \"foodplace\":\"Canteen\",\r\n               \"description\":\"Looks expired ingredients\",\r\n               \"date\":\"23/12/2020\"\r\n           }\r\n       ]\r\n        let cardStyle = {\r\n            margin:'5px',\r\n            border:\"solid 2px\",\r\n            backgroundColor:\"rgb(108, 147, 219)\"\r\n        }\r\n        return (\r\n            <div className='sc'>\r\n                <Stagger in>\r\n                    <ListGroup>\r\n                        {\r\n                            complaints.map((complaint)=>{\r\n                                \r\n                                return (\r\n                                    <Fade in key={complaint._id}>\r\n                                       \r\n                                        <Card style={cardStyle} className=\"text-center\">\r\n                                            <CardHeader>{complaint.email}</CardHeader>\r\n                                            <CardBody>\r\n                                            <CardHeader>{complaint.foodplace}</CardHeader>\r\n                                                <CardText>\r\n                                                {complaint.description}\r\n                                                </CardText>\r\n                                                <Button variant=\"info\" /*onClick={(complaint) => this.handleResolve(complaint._id)}*/ >Mark as resolved</Button>\r\n                                            </CardBody>\r\n                                            <CardFooter className=\"text-muted\">{complaint.date.toString()}</CardFooter>\r\n                                        </Card>\r\n                                       \r\n                                    </Fade>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ListGroup>\r\n                </Stagger>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n \r\nexport default /*connect(mapStateProps,{Resolvefood})*/Foodadmin;","import React, { Component } from 'react';\r\nimport {Switch,Route, Redirect} from 'react-router-dom';\r\nimport Header from './header';\r\nimport Sign from './sign';\r\nimport Scorner from './studentscorner';\r\nimport Login from './login';\r\nimport Land from './land';\r\nimport Mycomplaints from './mycomplaints';\r\nimport Food from './food';\r\nimport Admin from './admin';\r\nimport Foodadmin from './adminfood'\r\n/*import { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated:state.auth.isAuthenticated,\r\n        role:state.auth.user\r\n    }\r\n }\r\n */\r\nclass Main extends Component {\r\n\r\n    render() {\r\n                \r\n       /* const PrivateRoute = ({ component: Component, ...rest }) => (\r\n            <Route {...rest} render={(props) => (\r\n              this.props.isAuthenticated && this.props.role.role === 'student'\r\n                ? <Component {...props} />\r\n                : <Redirect to={{\r\n                    pathname: '/login',\r\n                    state: { from: props.location }\r\n                  }} />\r\n            )} />\r\n          );\r\n          const MycomplaintsPrivateRoute = ({ component: Component, ...rest }) => (\r\n            <Route {...rest} render={(props) => (\r\n              this.props.isAuthenticated && this.props.role.role === 'student'\r\n                ? <Component {...props} />\r\n                : \"NOT AUTHORIZED\"\r\n            )} />\r\n          );\r\n           const FoodAdminPrivateRoute = ({ component: Component, ...rest }) => (\r\n            <Route {...rest} render={(props) => (\r\n              this.props.isAuthenticated && this.props.role.role === 'Faculty' \r\n                ? <Component {...props} />\r\n                : <Redirect to={{\r\n                    pathname: '/login',\r\n                    state: { from: props.location }\r\n                  }} />\r\n            )} />\r\n          );*/\r\n          \r\n        return (\r\n            <div>\r\n                <Header/>\r\n                <Switch>\r\n                    <Route path='/land' component={Land}/>\r\n                    <Route exact path='/login' component={Login} />     \r\n                    <Route exact path='/signup' component={Sign} />\r\n                    <Route exact path='/studentscorner' component={Scorner}/>\r\n                    <Route exact path=\"/studentscorner/food\" component={Food}/>\r\n                    <Route exact path=\"/studentscorner/mycomplaints\" component={Mycomplaints}/>\r\n                    <Route exact path='/admin' component={Admin}/>\r\n                    <Route exact path='/admin/food' component={Foodadmin}/> \r\n                    <Redirect to='/land'/>                  \r\n                </Switch>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default /*connect(mapStateToProps)*/(Main)\r\n\r\n","import React,{Component} from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport Main from './components/main';\n///import {store} from './redux/configurestore';\n//import {loaduser} from './redux/actions/actioncreators';\n//import { PersistGate } from 'redux-persist/integration/react';\n\nclass App extends Component {\n/*componentDidMount(){\n store.dispatch(loaduser());\n\n}*/\n\nrender(){\n  return (\n    //<Provider store={store} >\n      \n        <BrowserRouter>     \n          <Main/>\n        </BrowserRouter>\n     \n    //</Provider> \n  );\n}}\n\nexport default App ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}